{"version":3,"sources":["crud.js","modal.js","App.js","index.js"],"names":["CRUD","Component","componentDidMount","getPosts","a","axios","get","response","setState","posts","data","console","log","deletePost","eId","delete","state","filter","e","id","createPost","post","name","avatar","createdAt","push","updatePost","put","index","findIndex","selectPost","handleChange","target","value","handleSubmit","preventDefault","className","onSubmit","this","type","onChange","src","Table","striped","bordered","hover","variant","map","style","width","height","Button","color","onClick","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cc142b73.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport App1 from \"./modal.js\";\r\nclass CRUD extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            posts: [],\r\n            id: \"\",\r\n            name: \"\",\r\n            avatar: \"\",\r\n            createdAt: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => this.getPosts();\r\n\r\n    getPosts = async () => {\r\n        const response = await axios.get(\"https://60e3ea516c365a0017839417.mockapi.io/users\");\r\n        this.setState({\r\n            posts: response.data\r\n        })\r\n        console.log(response.data);\r\n    }\r\n\r\n\r\n    deletePost = async (eId) => {\r\n        try {\r\n            await axios.delete(`https://60e3ea516c365a0017839417.mockapi.io/users/${eId}`);\r\n            let posts = [...this.state.posts];\r\n            posts = posts.filter((e) => e.id !== eId);\r\n            this.setState({\r\n                posts\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n\r\n    }\r\n\r\n    createPost = async () => {\r\n              \r\n        const { data } = await axios.post(\"https://60e3ea516c365a0017839417.mockapi.io/users\",\r\n            {\r\n                name: this.state.name,\r\n                avatar: this.state.avatar,\r\n                createdAt: this.state.createdAt,\r\n            });\r\n        const posts = [...this.state.posts];\r\n        posts.push(data);\r\n        this.setState({\r\n            posts: posts,\r\n            name: \"\",\r\n            avatar: \"\",\r\n            createdAt: \"\",\r\n        })\r\n\r\n    }\r\n\r\n    updatePost = async () => {\r\n        \r\n        try {\r\n          const { id, name, avatar, createdAt, posts } = this.state;\r\n          const { data } = await axios.put(`https://60e3ea516c365a0017839417.mockapi.io/users/${id}`, {\r\n            name,\r\n            avatar,\r\n            createdAt,\r\n          });\r\n          const index = posts.findIndex((e) => e.id === id);\r\n          posts[index] = data;\r\n    \r\n          this.setState({ posts, id: \"\", name: \"\", avatar: \"\", createdAt: \"\" });\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      };\r\n\r\n      selectPost = (e) => {\r\n        this.setState({\r\n            id:e.id,\r\n            name: e.name,\r\n            avatar: e.avatar,\r\n            createdAt: e.createdAt,\r\n        })\r\n}\r\n\r\n    handleChange = ({ target: { name, value } }) => {\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleSubmit = (e) =>{\r\n    e.preventDefault();\r\n    if(this.state.id){\r\n        this.updatePost();\r\n    }else{\r\n    this.createPost();\r\n    }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            <div className=\"class\">\r\n            \r\n                <h4>To Add a User :</h4>\r\n            \r\n            <form onSubmit={this.handleSubmit}>\r\n                    <div><b> Enter a Name</b> </div>\r\n                    <input type=\"text\" name=\"name\" value={this.state.name}  onChange={this.handleChange}/>\r\n                    <div><b>Enter a Avatar Url</b></div>\r\n                    <input type=\"url\" name=\"avatar\" src={this.state.avatar} onChange={this.handleChange}/>\r\n                    <div><b>Enter a valid Date</b></div>\r\n                   <p> <input type=\"datetime-local\" name=\"createdAt\" value={this.state.createdAt} onChange={this.handleChange} /></p>\r\n                    <p><input type=\"Submit\" /></p>\r\n                </form>\r\n                </div> \r\n               \r\n                <Table striped bordered hover variant=\"dark\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Id</th>\r\n                            <th>Name</th>\r\n                            <th>Avatar</th>\r\n                            <th>Date</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.posts.map((e) => {\r\n                            return (\r\n                                <tr key={e.id}>\r\n                                    <td>{e.id}</td>\r\n                                    <td>{e.name}</td>\r\n                                    <td><img src={e.avatar} style={{ width: \"100px\", height: \"100px\" }} ></img></td>\r\n                                    <td>{e.createdAt}</td>\r\n                                   <td><p> <Button  style={{ color:\"white\"}}   onClick={() => { this.deletePost(e.id) }}>Delete</Button></p>\r\n                                   <p> <Button onClick={() => { this.selectPost(e) }}>Edit User</Button></p></td>\r\n                                </tr>\r\n\r\n                            );\r\n                        })}\r\n\r\n\r\n                    </tbody>\r\n                </Table>\r\n                \r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default CRUD;","import React, { Component } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\nclass App1 extends Component {\r\n  state = {\r\n    isOpen: false\r\n  };\r\n\r\n  openModal = () => this.setState({ isOpen: true });\r\n  closeModal = () => this.setState({ isOpen: false });\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div\r\n          className=\"d-flex align-items-center justify-content-center\"\r\n          style={{ height: \"100vh\" }}\r\n        >\r\n          <Button variant=\"primary\" onClick={this.openModal}>\r\n            Launch demo modal\r\n          </Button>\r\n        </div>\r\n        <Modal show={this.state.isOpen} onHide={this.closeModal}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Modal heading</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={this.closeModal}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App1;","\r\nimport CRUD from \"./crud.js\";\r\nfunction App(){\r\n    \r\n    return(\r\n        <>\r\n        \r\n       <CRUD />\r\n       \r\n        </>\r\n    );\r\n}\r\nexport default App;","import REACT from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./style.css\";\r\nimport App from \"./App.js\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n\r\n\r\nReactDOM.render(<>\r\n<App/>\r\n</>\r\n,document.getElementById(\"root\"));"],"sourceRoot":""}